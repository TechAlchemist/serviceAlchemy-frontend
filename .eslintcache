[{"G:\\project3\\service-management-frontend\\src\\index.js":"1","G:\\project3\\service-management-frontend\\src\\App.js":"2","G:\\project3\\service-management-frontend\\src\\reportWebVitals.js":"3","G:\\project3\\service-management-frontend\\src\\services\\userService.js":"4","G:\\project3\\service-management-frontend\\src\\components\\Nav\\Nav.js":"5","G:\\project3\\service-management-frontend\\src\\pages\\LoginPage\\LoginPage.js":"6","G:\\project3\\service-management-frontend\\src\\pages\\SignupPage\\SignupPage.js":"7","G:\\project3\\service-management-frontend\\src\\pages\\HomePage\\HomePage.js":"8","G:\\project3\\service-management-frontend\\src\\pages\\DashboardPage\\Dashboard.js":"9","G:\\project3\\service-management-frontend\\src\\pages\\CustomerPages\\OpenTickets.js":"10","G:\\project3\\service-management-frontend\\src\\pages\\CustomerPages\\ClosedTickets.js":"11","G:\\project3\\service-management-frontend\\src\\pages\\CustomerPages\\NewTicket.js":"12","G:\\project3\\service-management-frontend\\src\\pages\\NotFoundPage\\NotFoundPage.js":"13","G:\\project3\\service-management-frontend\\src\\services\\tokenService.js":"14","G:\\project3\\service-management-frontend\\src\\services\\ticketService.js":"15","G:\\project3\\service-management-frontend\\src\\components\\BannerImage\\BannerImage.js":"16","G:\\project3\\service-management-frontend\\src\\components\\SideBars\\CustomerSideBar.js":"17","G:\\project3\\service-management-frontend\\src\\components\\SignupForm\\SignupForm.js":"18","G:\\project3\\service-management-frontend\\src\\components\\FeaturedArticle\\FeaturedArticle.js":"19","G:\\project3\\service-management-frontend\\src\\components\\CustomerOpenTicket\\CustomerOpenTicket.js":"20","G:\\project3\\service-management-frontend\\src\\services\\helperFunctions.js":"21","G:\\project3\\service-management-frontend\\src\\components\\Modal\\DeleteTicketModal.js":"22","G:\\project3\\service-management-frontend\\src\\components\\CustomerOpenTicket\\CustomerOpenTicketUpdate.js":"23","G:\\project3\\service-management-frontend\\src\\components\\SideBars\\EngineerSideBar.js":"24","G:\\project3\\service-management-frontend\\src\\components\\ManagerVisuals\\ManagerVisuals.js":"25","G:\\project3\\service-management-frontend\\src\\components\\TicketQueue\\TicketQueue.js":"26","G:\\project3\\service-management-frontend\\src\\components\\Ticket\\Ticket.js":"27"},{"size":590,"mtime":1607461235333,"results":"28","hashOfConfig":"29"},{"size":3036,"mtime":1607717000264,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":1055,"mtime":1607641128109,"results":"32","hashOfConfig":"29"},{"size":1107,"mtime":1607618221912,"results":"33","hashOfConfig":"29"},{"size":2129,"mtime":1607556932896,"results":"34","hashOfConfig":"29"},{"size":519,"mtime":1607466686969,"results":"35","hashOfConfig":"29"},{"size":5096,"mtime":1607641710129,"results":"36","hashOfConfig":"29"},{"size":1512,"mtime":1607902769740,"results":"37","hashOfConfig":"29"},{"size":1334,"mtime":1607904235907,"results":"38","hashOfConfig":"29"},{"size":613,"mtime":1607626854859,"results":"39","hashOfConfig":"29"},{"size":5963,"mtime":1607901875745,"results":"40","hashOfConfig":"29"},{"size":1028,"mtime":1607625219210,"results":"41","hashOfConfig":"29"},{"size":812,"mtime":1607465443258,"results":"42","hashOfConfig":"29"},{"size":1836,"mtime":1607725804314,"results":"43","hashOfConfig":"29"},{"size":248,"mtime":1607557811175,"results":"44","hashOfConfig":"29"},{"size":1684,"mtime":1607905741249,"results":"45","hashOfConfig":"29"},{"size":4333,"mtime":1607556437608,"results":"46","hashOfConfig":"29"},{"size":798,"mtime":1607640721368,"results":"47","hashOfConfig":"29"},{"size":1863,"mtime":1607901891085,"results":"48","hashOfConfig":"29"},{"size":100,"mtime":1607550598462,"results":"49","hashOfConfig":"29"},{"size":1971,"mtime":1607713664068,"results":"50","hashOfConfig":"29"},{"size":5725,"mtime":1607727852455,"results":"51","hashOfConfig":"29"},{"size":2599,"mtime":1607905823949,"results":"52","hashOfConfig":"29"},{"size":140,"mtime":1607888018487,"results":"53","hashOfConfig":"29"},{"size":129,"mtime":1607901892471,"results":"54","hashOfConfig":"29"},{"size":1788,"mtime":1607903922457,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"123ssgh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\project3\\service-management-frontend\\src\\index.js",[],["113","114"],"G:\\project3\\service-management-frontend\\src\\App.js",[],"G:\\project3\\service-management-frontend\\src\\reportWebVitals.js",[],"G:\\project3\\service-management-frontend\\src\\services\\userService.js",[],"G:\\project3\\service-management-frontend\\src\\components\\Nav\\Nav.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\LoginPage\\LoginPage.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\SignupPage\\SignupPage.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\HomePage\\HomePage.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\DashboardPage\\Dashboard.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\CustomerPages\\OpenTickets.js",["115"],"G:\\project3\\service-management-frontend\\src\\pages\\CustomerPages\\ClosedTickets.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\CustomerPages\\NewTicket.js",[],"G:\\project3\\service-management-frontend\\src\\pages\\NotFoundPage\\NotFoundPage.js",[],"G:\\project3\\service-management-frontend\\src\\services\\tokenService.js",[],"G:\\project3\\service-management-frontend\\src\\services\\ticketService.js",[],"G:\\project3\\service-management-frontend\\src\\components\\BannerImage\\BannerImage.js",[],"G:\\project3\\service-management-frontend\\src\\components\\SideBars\\CustomerSideBar.js",[],"G:\\project3\\service-management-frontend\\src\\components\\SignupForm\\SignupForm.js",[],"G:\\project3\\service-management-frontend\\src\\components\\FeaturedArticle\\FeaturedArticle.js",[],"G:\\project3\\service-management-frontend\\src\\components\\CustomerOpenTicket\\CustomerOpenTicket.js",["116"],"G:\\project3\\service-management-frontend\\src\\services\\helperFunctions.js",[],"G:\\project3\\service-management-frontend\\src\\components\\Modal\\DeleteTicketModal.js",["117"],"import {camelCase} from '../../services/helperFunctions';\r\nimport { deleteSingleTicket } from '../../services/ticketService';\r\nimport { Redirect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Modal = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    async function handleDeletion(event) {\r\n        event.preventDefault(); // disable default behavior\r\n        try {\r\n            history.push('/dashboard/openTickets');\r\n            await deleteSingleTicket(props.ticket._id);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\" id={props.modalId}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n\r\n                {/* <!-- Modal Header --> */}\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">{camelCase(props.ticket.ticketType)}&nbsp;-&nbsp;{props.ticket.ticketTitle}</h4>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                </div>\r\n\r\n                {/* <!-- Modal body --> */}\r\n                <div className=\"modal-body\">\r\n                    Hey there, are you sure you want to do this? You'll be deleting the {props.ticket.ticketType} you submitted on {new Date(props.ticket.createdAt).toLocaleDateString()}. This means a Support Engineer will NOT be reaching out. \r\n                </div>\r\n\r\n                {/* <!-- Modal footer --> */}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-success\" data-dismiss=\"modal\">Nevermind</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={handleDeletion}> Yes, Delete</button>\r\n\r\n                </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","G:\\project3\\service-management-frontend\\src\\components\\CustomerOpenTicket\\CustomerOpenTicketUpdate.js",["118"],"// import { Link } from 'react-router-dom'\r\nimport { fetchSingleTicket } from '../../services/ticketService';\r\nimport { useState, useEffect } from \"react\";\r\nimport CustomerSideBar from '../SideBars/CustomerSideBar';\r\nimport {  updateSingleTicket } from '../../services/ticketService'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst CustomerOpenTicket = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [ticket, setTicket] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        getTicket()\r\n    }, [props.match.params.ticketId] )\r\n\r\n    async function getTicket() {\r\n        const ticketData = await fetchSingleTicket(props.match.params.ticketId);\r\n        setTicket(ticketData);        \r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        ticketTitle: '',\r\n        ticketDescription: '',\r\n      });\r\n    // eslint-disable-next-line\r\n    const [messageState, setMessageState] = useState({\r\n        msg: ''\r\n    });\r\n\r\n    function updateMessage(msg) {\r\n        setMessageState({message: msg});\r\n    }\r\n    \r\n    function handleChange(e) {\r\n        updateMessage('');\r\n        setFormState(prevState => ({\r\n          ...prevState,\r\n          [e.target.name]: e.target.value\r\n        }));\r\n    }\r\n    \r\n    \r\n    async function handleSubmit (e) {\r\n        e.preventDefault();\r\n        // Why am I not using formState? Good question future self?\r\n        // We had problems pre-populating the form without refactoring the entire form. \r\n        // The solution was to check which of the fields were untouched.\r\n        // If untouched then assume it stays the same and set the formState to the tickets old value. Voila!\r\n        let updatedTicket = formState;\r\n        // If a field is left blank we assume we are not updatig it.\r\n        // Bracket notation becuase we are accessing all of the results from the fetch. \r\n        if (formState.ticketTitle === '' && formState.ticketDescription.length > 0) {\r\n            updatedTicket.ticketTitle = ticket[0].ticketTitle;\r\n        }\r\n        if (formState.ticketDescription === '' && formState.ticketTitle.length > 0) {\r\n            updatedTicket.ticketDescription = ticket[0].ticketDescription;\r\n        }\r\n        // console.log('investigating ticketTitle' + ticket[0].ticketTitle);\r\n        \r\n        console.log(updatedTicket);\r\n        try {\r\n            history.push('/dashboard');\r\n            await updateSingleTicket(updatedTicket, ticket[0]._id);\r\n            window.location.reload();\r\n        } catch (err) {\r\n          // Invalid ticket data\r\n          updateMessage(err.message);\r\n        }\r\n      }\r\n    \r\n      \r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">   \r\n            <CustomerSideBar active={'openTickets'} />\r\n                <div className=\"col-sm-9\">\r\n                    \r\n                    {ticket && ticket.map((ticket, idx) => \r\n                            <div key={idx}>\r\n \r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n\r\n                                        <h1> Update Ticket </h1>\r\n                                        <p> Click Edit for the field you want to change.</p>\r\n                                        {/* TICKET TITLE */}\r\n                                        <div className=\"col-sm-12\">\r\n                                        <h3> Ticket Title</h3>\r\n                                        <p> <em> Original Title </em> <br/> { ticket.ticketTitle } </p>\r\n                                        \r\n                                        <input \r\n                                            onChange={handleChange}\r\n                                            value={formState.ticketTitle}\r\n                                            name='ticketTitle' \r\n                                            className=\"form-control\" \r\n                                            type=\"text\"/>\r\n                                        </div>\r\n\r\n                                        <br/>\r\n\r\n                                        {/* TICKET DESCRIPTION */}\r\n                                        <div className=\"col-sm-12\">\r\n                                        <h3> Ticket Description</h3>\r\n                                        <p> <em> Original Description </em> <br/> { ticket.ticketDescription } </p>\r\n                                            <textarea \r\n                                            onChange={handleChange}\r\n                                            value={formState.ticketDescription} \r\n                                            name='ticketDescription' \r\n                                            className=\"form-control\" \r\n                                            type=\"text\">\r\n                                            </textarea>\r\n                                        </div>\r\n\r\n                                        {/* SUBMIT BUTTON */}\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"col-sm-12\">\r\n                                            <button className=\"btn btn-default\">Update Ticket</button>&nbsp;&nbsp;\r\n                                            <Link to='/dashboard/openTickets'>Cancel</Link>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                 </form>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n             </div>\r\n        </div>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default CustomerOpenTicket;","G:\\project3\\service-management-frontend\\src\\components\\SideBars\\EngineerSideBar.js",[],"G:\\project3\\service-management-frontend\\src\\components\\ManagerVisuals\\ManagerVisuals.js",[],"G:\\project3\\service-management-frontend\\src\\components\\TicketQueue\\TicketQueue.js",[],"G:\\project3\\service-management-frontend\\src\\components\\Ticket\\Ticket.js",["119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":15,"column":8,"nodeType":"128","endLine":15,"endColumn":20,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":13,"column":8,"nodeType":"128","endLine":13,"endColumn":37,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":18,"column":8,"nodeType":"128","endLine":18,"endColumn":37,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":8,"column":9,"nodeType":"139","messageId":"140","endLine":17,"endColumn":10},{"ruleId":"141","severity":1,"message":"142","line":40,"column":21,"nodeType":"143","endLine":40,"endColumn":46},{"ruleId":"141","severity":1,"message":"142","line":41,"column":21,"nodeType":"143","endLine":41,"endColumn":46},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyTickets'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'getTicket'. Either include it or remove the dependency array.",["147"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["148"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},"Update the dependencies array to be: [getMyTickets, props.user]",{"range":"154","text":"155"},"Update the dependencies array to be: [getTicket, props.match.params.ticketId]",{"range":"156","text":"157"},{"range":"158","text":"157"},[462,474],"[getMyTickets, props.user]",[411,440],"[getTicket, props.match.params.ticketId]",[563,592]]